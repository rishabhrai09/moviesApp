{"version":3,"sources":["actions/actions.js","component/searchBox.jsx","secretkey.js","component/movieitem.jsx","component/moviesResults.jsx","component/favouriteMovie.jsx","component/App.js","serviceWorker.js","reducers/movieReducer.js","rootReducer.js","reducers/favmovieReducer.js","store.js","index.js"],"names":["movies","items","type","favourite","movie","RemoveFavourite","SearchInput","state","query","url","this","fetch","method","then","respose","json","resultObj","props","results","className","Form","inline","FormGroup","FormLabel","FormControl","placeholder","onChange","event","setState","target","value","Button","onClick","search","variant","Component","connect","dispatch","bindActionCreators","MoviesItems","string","slice","removefav","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","addToFav","style","src","poster_path","alt","title","capitalizeFirstLetter","overview","release_date","marginBottom","popularity","showButton","displayfav","MoviesResult","to","map","item","key","id","console","log","FavouriteMovie","showButon","Favmovie","App","exact","path","component","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","removeFav","filter","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.23265342.chunk.js","sourcesContent":["export const MOVIES=\"MOVIES\";\r\nexport const ADD_FAV=\"ADD_FAV\";\r\nexport const REMV_FAV=\"REMV_FAV\"\r\n\r\nexport const movies=items=>{\r\n    const action={\r\ntype:MOVIES,\r\nitems\r\n    }\r\n    return action\r\n}\r\n\r\nexport const favourite=movie=>{\r\n    const action={\r\n        type:ADD_FAV,\r\n        movie\r\n    }\r\n    return action\r\n}\r\n\r\nexport const RemoveFavourite=movie=>{\r\n    const action={\r\n        type:REMV_FAV,\r\n        movie\r\n        \r\n    }\r\n    return action\r\n}","import React, { Component } from 'react'\r\nimport {FormControl,Form,FormGroup,Button ,FormLabel} from 'react-bootstrap';\r\nimport { API_KEY } from '../secretkey';\r\nimport {connect} from 'react-redux'\r\nimport {movies} from '../actions/actions';\r\n\r\nimport {bindActionCreators} from 'redux'\r\nclass SearchInput extends Component{\r\n    state={\r\n        query:''\r\n    }\r\n    search(){\r\n        let url=`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${this.state.query}`;\r\n        fetch(url,{\r\n            method:\"GET\"\r\n        }).then(respose=>respose.json())\r\n        .then(resultObj=>this.props.movies(resultObj.results))\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"row text-center\" >\r\n           <Form inline className=\"col-md-12 col-md-offset-3\">\r\n               <FormGroup>\r\n                   <FormLabel>Search</FormLabel>\r\n                   { ' ' } &nbsp;\r\n                   <FormControl\r\n                   type=\"text\"\r\n                   placeholder=\"Avengers\"\r\n                   onChange={(event)=>this.setState({query:event.target.value})}\r\n                   />\r\n               </FormGroup>\r\n               { ' ' } &nbsp;\r\n               <Button onClick={()=>{this.search()}} variant=\"success\">Serach</Button>\r\n           </Form>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return bindActionCreators({movies},dispatch)\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SearchInput) ","export const API_KEY=\"4caa27c6a263df51e63758353cfb1dca\"","import React, { Component } from 'react'\r\nimport './movieItems.css';\r\nimport { connect } from 'react-redux';\r\nimport {favourite,RemoveFavourite} from '../actions/actions'\r\nimport { bindActionCreators } from 'redux';\r\nconst urlcompo='https://image.tmdb.org/t/p/w600_and_h900_bestv2/'\r\n\r\nclass MoviesItems extends Component{\r\n    state={\r\n        favourite:false\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.slice(0,200);\r\n    }\r\n\r\n    addToFav(){\r\n        this.setState({favourite:!this.state.favourite})\r\n        this.props.favourite(this.props.movie)\r\n    }\r\n    removefav(){\r\n        this.setState({favourite:!this.state.favourite})\r\n        this.props.RemoveFavourite(this.props.movie)\r\n    }\r\n    displayfav(){\r\n        if(!this.state.favourite){\r\nreturn <svg className=\"bi bi-heart\" onClick={()=>this.addToFav()} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path fillRule=\"evenodd\" d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 01.176-.17C12.72-3.042 23.333 4.867 8 15z\" clipRule=\"evenodd\"/>\r\n</svg>\r\n\r\n        }else{\r\n             return <svg className=\"bi bi-heart-fill\"  onClick={()=>this.removefav()} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\" clipRule=\"evenodd\"/>\r\n           </svg>\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {movie}= this.props\r\n        return(\r\n        \r\n                \r\n            <div className=\"col-md-6 col-sm-6  mr \" style={{width:'200px',height:'220px'}}  >\r\n         <div className=\"card\" style={{width: '25rem',height:'110px'}}>\r\n  <img src={urlcompo+movie.poster_path} className=\"card-img-top img-fluid img-thumbnail image\" alt=\"...\"/>\r\n  <div className=\"card-body\">\r\n    <p className=\"card-title\">{movie.title}</p>\r\n        <p className=\"card-text\">{this.capitalizeFirstLetter(movie.overview)}.</p>\r\n        <p className=\"card-text\"> Release Date-{movie.release_date}</p>\r\n        <p className=\"card-text\">Ratings- <span className=\"badge badge-default\"><svg style={{marginBottom:'2px'}} className=\"bi bi-star\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n</svg>{movie.popularity}</span></p>\r\n        <span>{this.props.showButton? this.displayfav():null}</span>\r\n  </div>\r\n</div>\r\n\r\n         </div>\r\n          \r\n\r\n        )\r\n    }\r\n}\r\nconst mapDisptachToprops=dispatch=>{\r\n    return bindActionCreators({favourite,RemoveFavourite},dispatch)\r\n}\r\nexport default connect(null,mapDisptachToprops)(MoviesItems)","import React, { Component } from 'react';\r\nimport SearchInput from './searchBox';\r\nimport {connect} from 'react-redux'\r\nimport MoviesItems from './movieitem'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass MoviesResult extends Component{\r\n    render(){\r\n        const {movies} =this.props;\r\n        return(\r\n            <div>\r\n<Link to=\"/fav\">Favourite List</Link>\r\n                <hr/>\r\n            <SearchInput/>\r\n            <div>\r\n            {\r\n             movies.map(item=><MoviesItems showButton={true} key={item.id} movie={item} />)\r\n            }\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    console.log(\"state is:-\",state)\r\n    return{\r\n        movies:state.movies\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(MoviesResult)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MoviesItems from './movieitem'\r\nimport {Link} from 'react-router-dom'\r\nexport class FavouriteMovie extends Component{\r\n    render(){\r\n        const {favourite}= this.props \r\n        return(<div>\r\n            <Link to=\"/\">Home</Link>\r\n\r\n            <h1>My Favourite Movie</h1>\r\n            {\r\n               favourite.map(item=><MoviesItems key={item.id} movie={item} showButon={false}/>)\r\n            }\r\n        </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToprops=state=>{\r\n    console.log(\"my fave movie is-\",state)\r\n    return{\r\nfavourite:state.Favmovie\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToprops,null)(FavouriteMovie)","import React from 'react';\nimport './App.css';\nimport MoviesResult from './moviesResults';\nimport FavouriteMovie from './favouriteMovie';\nimport {\n  \n  Switch,\n  Route\n} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row text-center \">\n     <div className=\"jumbotron pad \">\n       <h1>My Movies</h1>\n       <p>\n         All about movies love\n       </p>\n       </div>\n     </div>\n     <div className=\"row\">\n       \n     \n     <Switch>\n       <Route exact path=\"/\" component={MoviesResult} />\n       <Route exact path=\"/fav\" component={FavouriteMovie} />\n     </Switch>\n   \n     </div>\n   \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {MOVIES} from '../actions/actions';\r\n\r\nexport const movies=(state=[],action)=>{\r\n    switch(action.type){\r\n    case MOVIES:\r\n        console.log(\"movies are\",action.items)\r\n        return action.items\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {movies} from './reducers/movieReducer';\r\nimport {Favmovie} from './reducers/favmovieReducer';\r\n\r\n\r\nexport const rootReducer=combineReducers({movies,Favmovie})","import {ADD_FAV,REMV_FAV} from '../actions/actions';\r\n\r\nexport const Favmovie=(state=[],action)=>{\r\n    switch (action.type) {\r\n        case ADD_FAV:\r\n            console.log(\"fav movie is=\",action.movie)\r\n            let favourite=[...state,action.movie]\r\n            return favourite\r\n    case REMV_FAV:\r\n        let removeFav=state.filter(item=>item.id!==action.movie.id)\r\nreturn removeFav\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore} from 'redux';\r\nimport {rootReducer} from './rootReducer';\r\n\r\nexport const store =createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}